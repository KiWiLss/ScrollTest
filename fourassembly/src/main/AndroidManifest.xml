<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
          xmlns:tools="http://schemas.android.com/tools" package="com.kiwilss.lxkj.fourassembly">

    <!--<uses-permission android:name="android.permission.PROCESS_OUTGOING_CALLS"/>-->

    <uses-permission android:name="android.permission.INTERNET"/>
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>

    <!--&lt;!&ndash;// 声明本应用 可允许通信的权限&ndash;&gt;-->
    <!--<permission android:name="com.kiwilss.lxkj.Read" android:protectionLevel="normal"/>-->
    <!--&lt;!&ndash;// 细分读 & 写权限如下，但本Demo直接采用全权限&ndash;&gt;-->
     <!--<permission android:name="com.kiwilss.lxkj.Write" android:protectionLevel="normal"/>-->
    <!--<permission android:name="com.kiwilss.lxkj.PROVIDER" android:protectionLevel="normal"/>-->


    <application
            android:name=".App"
            android:allowBackup="true"
            android:icon="@mipmap/ic_launcher"
            android:label="@string/app_name"
            android:roundIcon="@mipmap/ic_launcher_round"
            android:supportsRtl="true"
            android:theme="@style/AppTheme" tools:ignore="GoogleAppIndexingWarning">
        <activity android:name=".SplashActivity"
        android:theme="@style/FirstTheme">
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>

                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>
        </activity>

        <activity android:name=".MainActivity"/>

        <activity android:name=".activity.OneActivity"/>

        <activity android:name=".activity.TwoActivity" android:configChanges="orientation|screenSize"/>

        <activity android:name=".activity.ThreeActivity"
        android:launchMode="singleTask"/>

        <!--launch-->
<!--默认就是 standard-->
        <activity android:name=".lauch.StandardActivity" android:launchMode="standard"/>

        <activity android:name=".lauch.SingleTopActivity" android:launchMode="singleTop"/>
        <activity android:name=".lauch.OtherTopActivity"/>

        <activity android:name=".lauch.SingleTaskActivity" android:launchMode="singleTask"
                  android:taskAffinity="com.kiwilss.lxkj.singletask"/>

        <activity android:name=".lauch.OtherSingleTaskActivity"/>

        <activity android:name=".lauch.SingleInstanceActivity" android:launchMode="singleInstance">
            <intent-filter>
                <action android:name="com.castiel.demo.singleinstance" />
                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>

        </activity>

        <activity android:name=".lauch.OtherSingleInstanceActivity"/>


        <activity android:name=".service.ServiceTestActivity">
            <intent-filter>
                <action android:name="com.castiel.demo.singleinstancetest" />
                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>

        </activity>

        <activity android:name=".custom_view.CustomViewActivity"/>

        <activity android:name=".broadcastreceiver.BroadActivity"/>

        <activity android:name=".anim.AnimActivity"/>

        <activity android:name=".anim.EditTextActivity"
                  />

        <activity android:name=".anim.AnimTestActivity"/>
        <activity android:name=".gesture.GestureActivity"/>
        <activity android:name=".http.HttpActivity"/>
        <activity android:name=".icon.BitmapActivity"/>
        <activity android:name=".io.IOTestActivity"/>

        <activity android:name=".handler.HandlerActivity"/>
        <activity android:name=".contentprovider.ContentTestActivity"/>

<!--service-->
        <service android:name=".service.StartService"/>
        <service android:name=".service.LocalService"/>
        <service android:name=".service.BindService"/>
        <service android:name=".service.MyIntentService">
            <intent-filter >
                <action android:name="cn.scu.finch"/>
            </intent-filter>
        </service>

        <!--远程服务-->
        <service android:name=".service.LongService"
                 android:process=":remote"
        android:exported="true"
        >
            <!--//该Service可以响应带有scut.carson_ho.service_server.AIDL_Service1这个action的Intent。-->
            <!--//此处Intent的action必须写成“服务器端包名.aidl文件名”-->
            <intent-filter>
                <action android:name="scut.carson_ho.service_server.AIDL_Service1"/>
            </intent-filter>

        </service>


        <!--broadcasereceiver-->
        <receiver android:name=".broadcastreceiver.NormalBroadCaseReceiver" tools:ignore="ExportedReceiver">
            <intent-filter>
                <action android:name="com.kiwilss.broadcase1"/>
                <category android:name="android.intent.category.DEFAULT"/>
            </intent-filter>
        </receiver>

        <receiver android:name=".broadcastreceiver.NormalBroadCaseReceiver2" tools:ignore="ExportedReceiver">
            <intent-filter>
                <action android:name="com.kiwilss.broadcase1"/>
                <category android:name="android.intent.category.DEFAULT"/>
            </intent-filter>
        </receiver>

        <!--可以设置广播的优先级-->
        <receiver android:name=".broadcastreceiver.OrderlyBroadcastReceiver"
        >
            <intent-filter android:priority="100">
                <action android:name="com.kiwilss.broadcase2"/>
                <category android:name="android.intent.category.DEFAULT"/>
            </intent-filter>
        </receiver>
        <receiver android:name=".broadcastreceiver.OrderlyBroadcastReceiver2"
        >
            <intent-filter android:priority="90">
                <action android:name="com.kiwilss.broadcase2"/>
                <category android:name="android.intent.category.DEFAULT"/>
            </intent-filter>
        </receiver>
        
        <!--contentprovider-->
        <provider android:authorities="com.kiwilss.lxkj.fourassembly.provider" android:name=".contentprovider.MyProvider"/>

        <provider
                android:name=".contentprovider.DataBaseProvider"
                android:authorities="com.example.databasetest.provider" >
        </provider>

        <!--// 声明外界进程可访问该Provider的权限（读 & 写）赋予所有权限，可以使用-->
        <provider android:name=".MyProvider"
                  android:authorities="com.kiwilss.lxkj.myprovider"
                  android:exported="true"
        />
        <!--// 声明外界进程可访问该Provider的权限（读 & 写）赋予部分权限-->

        <!--     android:permission="com.kiwilss.lxkj.PROVIDER"
                android:readPermisson = "com.kiwilss.lxkj.Read"
                android:writePermisson = "com.kiwilss.lxkj.Write"
                  android:exported="true"-->

    </application>

</manifest>